{"version":3,"sources":["../src/index.js"],"names":["app","use","express","static","__dirname","server","http","createServer","setInterval","calculateHighScores","AllUsers","Array","Top5Users","IsMutexEnabled","bodyParser","json","limit","config","bodyLimit","sort","a","b","highscores","points","length","slice","forEach","push","element","db","get","req","res","render","post","body","name","undefined","word","cookies","uuid","Score","includes","listen","process","env","PORT","port","console","log","address"],"mappings":"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","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport highscores from './models/interface/scores'\nimport config from './config.json';\nimport { Score } from './models/classes/score';\nimport scores from './api/scores';\nlet app = express();\napp.use(express.static(__dirname));\napp.server = http.createServer(app);\n\nsetInterval(calculateHighScores,1500)\n\nvar AllUsers = new Array();\nvar Top5Users = new Array();\nvar IsMutexEnabled=false;\n\n// logger\napp.use(morgan('dev'));\n\n// // 3rd party middleware\n// app.use(cors({\n// \texposedHeaders: config.corsHeaders\n// }));\n\napp.use(bodyParser.json({\n\tlimit : config.bodyLimit\n}));\n\nfunction calculateHighScores() {\t\n\tIsMutexEnabled=true;\n\tTop5Users=new Array();\n\tAllUsers.sort(function(a,b){\n\t\treturn highscores[b].points-highscores[a].points\n\t})\n\tif(AllUsers.length>=5){\t\t//na ypologistei sdto telos tou gyros\n\t\tAllUsers.slice(0,5).forEach(element=>{\n\t\t\tTop5Users.push(highscores[element])\n\t\t})\n\t}else{\n\t\tAllUsers.forEach(element=>{\n\t\t\tTop5Users.push(highscores[element])\n\t\t})\n\t}\n\tIsMutexEnabled=false;\n}\n\n\tvar db=\"test\"\n\tapp.use(middleware({app})); //the first level of middleware\n\tapp.get('/', function(req, res) {\n\t\tres.render('index.html');\n\t});\n\tapp.get('/api/getScores', function (req, res) {\n\t\tif(Top5Users.length===0){\n\t\t\tcalculateHighScores()\n\t\t}\n\t\tres.json(Top5Users)\n\t  })\n\n\t  app.post('/api/submitEntry', function (req, res) {\n\t\tif(req.body.name===undefined || req.body.word===undefined){\n\t\t\tres.json(\"Bad request\");\n\t\t\treturn;\n\t\t}\n\t\tvar name=req.body.name\n\t\tvar word=req.body.word\n\t\tif(IsMutexEnabled){\n\t\t\tres.json(\"The turn is over\");\t\n\t\t}\n\t\thighscores[req.cookies.uuid]=new Score(name,word)\n\t\tif(AllUsers.includes(req.cookies.uuid)===false){\n\t\t\tAllUsers.push(req.cookies.uuid)\n\t\t}\n\t\t//SortedMap.set(highscores[req.body.name].points,req.body.name);\n\t\tres.json(highscores[req.cookies.uuid].points)\n\t\t//res.json(req.body.name)\n\t  })\n\n\tapp.server.listen(process.env.PORT || config.port, () => {\n\t\tconsole.log(`Started on port ${app.server.address().port}`);\n\t});\n\nexport default app;\n"]}